@using Core.Interfaces
@model string
@{
    ViewData["Title"] = "Photo Gallery";
}
@inject IKeyGenerator _KeyGenerator
@inject IPhotoMetaData _PhotoMetaData

<h2>Photo Gallery</h2>
<div class="content">
    <div class="row">
        <div class="col-lg-12 h2">
            <a class="btn btn-danger glyphicon-plus" asp-controller="Photos" asp-action="Upload"> ADD PHOTO</a>
        </div>
    </div>
    @{
        const string root = "/PhotoStore";
        var key = _KeyGenerator.GetKey(Model);
        var photos = await _PhotoMetaData.GetUserPhotos(Model);

        while (photos.Count > 0)
        {
            <div class="row">
                @{
                    var threePhotos = photos.Take(4);
                    foreach (var photo in threePhotos)
                    {
                        <div class="col-md-3">
                            <figure>
                                @{
                                    var source = $"{root}/{key}/{photo.FileName}";
                                }
                                <img src="@source" class="img-thumbnail"/>
                                <figcaption>@photo.Description</figcaption>
                            </figure>
                        </div>
                    }
                    var toDelete = photos.Count >= 4 ? 4 : photos.Count;
                    photos.RemoveRange(0, toDelete);
                }
            </div>
        }
    }
</div>

